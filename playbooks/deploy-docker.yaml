---
- hosts: all
  become: true
  gather_facts: yes
  vars:
   created_username: $user$ #change this to the user you wish to create (You will still need to set the password before use using root user and command "passwd {username}"
   docker_compose_version: v2.24.6 #change version to whatever is recent on their github page (https://github.com/docker/compose/releases)
   GOTIFY_IP: $GOTIFY_IP$ #replace with your internal IP for Gotify
   GOTIFY_PORT: $GOTIFY_PORT$ #replace with your internal port for Gotify
   GOTIFY_TOKEN: $GOTIFY_TOKEN$ #replace with your token for Gotify
  
  tasks:
  - name: install dependencies
    apt:
      name: 
       - ca-certificates
       - curl
       - gnupg
       - gpg
       - lsb-release
       - apt-transport-https
       - software-properties-common
      state: present
      update_cache: true

  - name: add GPG key
    apt_key:
      url: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg
      state: present
      
  - name: Get OS type (Linux)
    shell: uname -s
    ignore_errors: yes
    register: uname_s_result
    
  - name: Get OS proc (x86_64 or aarch64)
    shell: uname -m
    ignore_errors: yes
    register: uname_m_result

  - name: Get OS arch (amd64 or arm64)
    shell: dpkg --print-architecture
    ignore_errors: yes
    register: arch_result

  - name: add docker repository to apt
    apt_repository:
      filename: docker 
      repo: deb [arch={{ arch_result.stdout }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable
      state: present
        
  - name: install docker engine
    apt:
      update_cache: true
      name: 
        - docker-ce 
        - docker-ce-cli 
        - containerd.io
      state: present

  - name: test docker
    command: docker info

  - name: Install docker-compose (based on OS and arch from above)
    uri:
      url : https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ uname_s_result.stdout }}-{{ uname_m_result.stdout }}
      method: GET
      dest: /usr/local/bin/docker-compose
      mode: 'u+x,g+x'
      follow_redirects: safe
    register: result

  - name: Ensure Docker group exists
    ansible.builtin.group:
      name: docker
      state: present

  - name: Add user with a bash shell, appending the group 'sudo' and 'docker' to the user's groups (You will still need to set the password before use using root user and command "passwd {username}"
    ansible.builtin.user:
      name: {{ created_username }}
      shell: /bin/bash
      groups: sudo, docker
      append: yes

  - name: Enable Docker service
    ansible.builtin.service:
      name: docker
      enabled: true
      state: started
      
  - name: notify via Gotify
     uri:
       url: 'http://{{ GOTIFY_IP }}:{{ GOTIFY_PORT }}/message?token={{ GOTIFY_TOKEN }}'
       method: POST
       body:
         title:
           content: Docker has been deployed!
         message: 
           content: The docker deployment playbook has completed for {{ ansible_host }} and has been started. The user {{ created_user }} was created. Please login and set the password for this user.
         priority:
           content: '5'
       body_format: form-multipart
     register: result
...
