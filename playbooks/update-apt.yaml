---
- hosts: all
  become: yes
  vars:
   GOTIFY_IP: X.X.X.X #[Your gotify host IP goes here]
   GOTIFY_PORT: XXXX #[Your gotify port goes here]
   GOTIFY_TOKEN: ABCD1234 #[Your app token goes here]
  
  tasks:
  
    - name: packages | ensure apt list dir exists
      file:
        path: /var/lib/apt/lists/
        state: directory
        mode: 0755
  
    - name: update apt packages
      apt:
        update_cache: yes
    
    - name: upgrade apt packages
      apt:
        upgrade: yes
    
    - name: List installed and updated packages
      shell: grep -E "^$(date +%Y-%m-%d).+ (install|upgrade) " /var/log/dpkg.log |cut -d " " -f 3-5
      register: result 

    - name: Show Output of updated files
      debug: msg="{{ result.stdout_lines }}"

    - name: Check if reboot is required
      stat:
        path: /var/run/reboot-required
      register: reboot_required_file

    - name: Show Output of required reboots
      debug: msg="{{ reboot_required_file.stat.exists == true }}" 

    - name: Rebooting machine
      shell: sleep 2 && shutdown -r now "Ansible updates triggered"
      async: 1
      poll: 0
      ignore_errors: true
      when: reboot_required_file.stat.exists

    - name: Waiting for the machine to come back
      local_action: wait_for host={{ ansible_host }} state=started port=22 delay=30
      become: no
      when: reboot_required_file.stat.exists
###
    - name: Remove dependencies that are no longer required.
      ansible.builtin.apt:
        autoremove: yes

    - name: notify via Gotify
      uri:
        url: 'http://{{ GOTIFY_IP }}:{{ GOTIFY_PORT }}/message?token={{ GOTIFY_TOKEN }}'
        method: POST
        body:
          title:
            content: APT Packages Update
          message: 
            content: The apt-packages playbook has completed for {{ ansible_host }} and is now updated. A required reboot is {{ reboot_required_file.stat.exists == true }}.
          priority:
            content: '5'
        body_format: form-multipart
      register: result
...
